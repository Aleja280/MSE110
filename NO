#pragma config(Sensor, S1,     Touch_Sensor,   sensorEV3_Touch)
#pragma config(Sensor, S2,     Ultra_Sensor,   sensorEV3_Ultrasonic)
#pragma config(Sensor, S3,     Gyro_Sensor,    sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Sensor, S4,     Touch1_Sensor,   sensorEV3_Touch)
#pragma config(Motor,  motorA,          Right_Motor,   tmotorEV3_Large, PIDControl, driveRight, encoder)
#pragma config(Motor,  motorD,          Left_Motor,    tmotorEV3_Large, PIDControl, driveLeft, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
void turnRight()
{


	motor[Left_Motor]=0;
	motor[Right_Motor]=0;

	//Reset motor encoder and gyro
	resetMotorEncoder(Left_Motor);
	resetMotorEncoder(Right_Motor);
	resetGyro(Gyro_Sensor);



	//Turn robot 90 degrees right
	setMotorSpeed(Left_Motor, -30);
	setMotorSpeed(Right_Motor, 30);
	long target=getGyroDegrees(Gyro_Sensor);
	while (getGyroDegrees(Gyro_Sensor) < target + 90)
	{
		//sleep(1);
	}
	//Stop motors
	motor[Left_Motor]=0;
	motor[Right_Motor]=0;

	// checks if turn is 90

	//over shoot
	while(getGyroDegrees(Gyro_Sensor) > 90){
		motor[Left_Motor]=5;
		motor[Right_Motor]=-5;

	}

	//underShoot
	while(getGyroDegrees(Gyro_Sensor) < 90){
		motor[Left_Motor]=-5;
		motor[Right_Motor]=5;
	}
	//stops correction
	motor[Left_Motor]=0;
	motor[Right_Motor]=0;


}
//--------------------------------------------------------------------------------

void goStraight()
{

	motor[Left_Motor]=0;
	motor[Right_Motor]=0;

	//Reset motor encoder
	resetMotorEncoder(Left_Motor);
	resetMotorEncoder(Right_Motor);


	long start1 = getMotorEncoder(Left_Motor);
	long distance = 360 * (24.5 / (4.33 * PI));
	setMotorSyncEncoder(Left_Motor, Right_Motor, 0, -distance, -30);
	while (getMotorEncoder(Left_Motor) > start1 - distance)
	{
		//sleep(1);
	}
	motor[Left_Motor]=0;
	motor[Right_Motor]=0;
}

//--------------------------------------------------------------------------------

void backUp()
{

	motor[Left_Motor]=0;
	motor[Right_Motor]=0;

	//Reset motor encoder
	resetMotorEncoder(Left_Motor);
	resetMotorEncoder(Right_Motor);


	long start1 = getMotorEncoder(Left_Motor);
	long distance = 360 * (9.0 / (4.33 * PI));
	setMotorSyncEncoder(Left_Motor, Right_Motor, 0, distance, 30);
	while (getMotorEncoder(Left_Motor) < start1 + distance)
	{
		//sleep(1);
	}

	motor[Left_Motor]=0;
	motor[Right_Motor]=0;


}

//--------------------------------------------------------------------------------

void turnLeft()
{


	motor[Left_Motor]=0;
	motor[Right_Motor]=0;

	//Reset motor encoder and gyro
	resetMotorEncoder(Left_Motor);
	resetMotorEncoder(Right_Motor);
	resetGyro(Gyro_Sensor);

	//Turn robot90 degrees left
	setMotorSpeed(Left_Motor, 30);
	setMotorSpeed(Right_Motor, -30);
	long target=getGyroDegrees(Gyro_Sensor);
	while (getGyroDegrees(Gyro_Sensor) > target - 90)
	{
		//sleep(1);
	}
	motor[Left_Motor]=0;
	motor[Right_Motor]=0;
}

task main()
{
	playTone(300,200);
	sleep(2000);
	turnLeft();
	turnLeft();
	goStraight();
	//cell (2,4)
	goStraight();
	backUp();
	//cell (2,3)
	turnLeft();
	goStraight();
	//cell (1,3)
	goStraight();
	//cell(0,3)
	backUp();
	turnLeft();
	goStraight();
	//(0,4)
	backUp();
	turnLeft();
	goStraight();
	//(1,4
	backUp();
	turnLeft();
	turnRight();
	turnRight();
	goStraight();
	//1,5
	backUp();
	turnLeft();
	turnRight();
	turnRight();
	goStraight();
	//0,5
	backUp();
	turnLeft();
	turnRight();
	turnRight();
	turnRight();
	goStraight();
	//1,5
	backUp();
	turnLeft();
	goStraight();
	//1,4
	backUp();
	turnLeft();
	goStraight();
	//0,4
	backUp();
	turnLeft();
	turnRight();
	turnRight();
	goStraight();
	//0,3
	backUp();
	turnLeft();
	turnRight();
	turnRight();
	goStraight();
	//1,3
	backUp();
	turnLeft();
	goStraight();
	//1,2
	backUp();
	turnLeft();
	goStraight();
	//0,2
	backUp();
	turnLeft();
	turnRight();
	turnRight();
	goStraight();
	//1,0
	backUp();
	turnLeft();
	turnRight();
	turnRight();
	goStraight();
	//1,1
	playTone(300,200);
	sleep(2000);

	turnRight();
	turnRight();
	goStraight();
	//0,1
	turnLeft();
	goStraight();
	//0,2
	turnLeft();
	goStraight();
	//1,2
	turnRight();
	goStraight();
	//1,3
	turnLeft();
	goStraight();
	//2,3
	turnRight();
	goStraight();
	//2,4
	goStraight();
	//2,5
	playTone(300,200);
	sleep(2000);





}
