#pragma config(Sensor, S1,     Gyro_Sensor,    sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Sensor, S2,     Light_Sensor,   sensorEV3_Color)
#pragma config(Sensor, S3,     Ultra_Sensor,   sensorEV3_Ultrasonic)
#pragma config(Motor,  motorB,          Left_Motor,    tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorC,          Right_Motor,   tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main()
{
	//Initiallizes motors
	setMotorBrakeMode(Left_Motor,motorCoast);
	setMotorBrakeMode(Right_Motor,motorCoast);
	resetMotorEncoder(Left_Motor);
	resetMotorEncoder(Right_Motor);
	resetGyro(Gyro_Sensor);
	sleep(1500);

	while(true){

		while(getUSDistance(Ultra_Sensor)>10){

			if(SensorValue(Light_Sensor)>35){
				//Moves forward while turning right
				setMotorSpeed(Left_Motor, 15);
				setMotorSpeed(Right_Motor, 35);
			}
			else{
				setMotorSpeed(Left_Motor, 35);
				setMotorSpeed(Right_Motor, 15);
			}
		}


		if(getUSDistance(Ultra_Sensor)<=10){
			//Wait 2 sec then beep
			motor[Left_Motor]=0;
			motor[Right_Motor]=0;
			playSound(soundBeepBeep);
			delay(2000);
			//left turn
			setMotorSyncEncoder(Left_Motor,Right_Motor,-100, 2000, 15);
			long target=getGyroDegrees(Gyro_Sensor)-90;
			while (getGyroDegrees(Gyro_Sensor) > target) {
				sleep(1);
			}
			motor[Left_Motor] = 0;
			motor[Right_Motor] = 0;

			//go straight
			long start1 = getMotorEncoder(Left_Motor);
			setMotorSyncEncoder(Left_Motor, Right_Motor, 0, 204, 30);
			while (getMotorEncoder(Left_Motor) < start1 + 204) {
				sleep(1);
			}
			motor[Left_Motor] = 0;
			motor[Right_Motor] = 0;
			//right turn
			setMotorSyncEncoder(Left_Motor,Right_Motor,100, 2000, 15);
			target=getGyroDegrees(Gyro_Sensor)+90;
			while (getGyroDegrees(Gyro_Sensor) < target) {
				sleep(1);
			}
			motor[Left_Motor] = 0;
			motor[Right_Motor] = 0;
			//go straight
			start1 = getMotorEncoder(Left_Motor);
			setMotorSyncEncoder(Left_Motor,Right_Motor,0,409,30);
			while(getMotorEncoder(Left_Motor)< start1 + 409) {
				sleep(1);
			}
			motor[Left_Motor]=0;
			motor[Right_Motor]=0;
			//right turn
			setMotorSyncEncoder(Left_Motor,Right_Motor,100, 2000, 15);
			target=getGyroDegrees(Gyro_Sensor)+90;
			while (getGyroDegrees(Gyro_Sensor) < target) {
				sleep(1);
			}

			motor[Left_Motor] = 0;
			motor[Right_Motor] = 0;
			//go straight
			start1=getMotorEncoder(Left_Motor);
			setMotorSyncEncoder(Left_Motor,Right_Motor,0,204,30);
			while(getMotorEncoder(Left_Motor)< start1 + 204){
				sleep(1);
			}

			motor[Left_Motor]=0;
			motor[Right_Motor]=0;
		}
	}
}
