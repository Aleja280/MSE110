#pragma config(Sensor, S1,     Touch_Sensor,   sensorEV3_Touch)
#pragma config(Sensor, S2,     Ultra_Sensor,   sensorEV3_Ultrasonic)
#pragma config(Sensor, S3,     Gyro_Sensor,    sensorEV3_Gyro, modeEV3Gyro_RateAndAngle)
#pragma config(Motor,  motorA,          Right_Motor,   tmotorEV3_Large, PIDControl, driveRight, encoder)
#pragma config(Motor,  motorD,          Left_Motor,    tmotorEV3_Large, PIDControl, driveLeft, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main(){

	//right turn
	setMotorBrakeMode(Left_Motor,motorCoast);
	setMotorBrakeMode(Right_Motor,motorCoast);
	resetMotorEncoder(Left_Motor);
	resetMotorEncoder(Right_Motor);
	resetGyro(Gyro_Sensor);




	while(true){

		while(SensorValue(Touch_Sensor)==1){




			while(true){
				
				//Move straight one cell
				//long start1 = getMotorEncoder(Left_Motor);
				//setMotorSyncEncoder(Left_Motor, Right_Motor, 0, -598, -30);
				//while (getMotorEncoder(Right_Motor) > start1 - 598) {
				//	sleep(1);
				//}
				//motor[Left_Motor] = 0;
				//motor[Right_Motor] = 0;

				//left turn
				//		setMotorSyncEncoder(Left_Motor,Right_Motor,-100, 2000, 40);
				//		long target=getGyroDegrees(Gyro_Sensor)-52;
				//		while (getGyroDegrees(Gyro_Sensor) > target) {
				//			sleep(1);
				//		}

				//right turn
				//setMotorSyncEncoder(Left_Motor,Right_Motor,100, 2000, 40);
				//long target=getGyroDegrees(Gyro_Sensor)+52;
				//while (getGyroDegrees(Gyro_Sensor) < target) {
				//	sleep(1);
				//}
			
			//Move back
			long start1 = getMotorEncoder(Left_Motor);
				setMotorSyncEncoder(Left_Motor, Right_Motor, 0, 150, 30);
				while (getMotorEncoder(Right_Motor) < start1 + 598) {
					sleep(1);
				}
				motor[Left_Motor] = 0;
				motor[Right_Motor] = 0;
			


			}
		}
	}
